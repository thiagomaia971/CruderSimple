@using CruderSimple.Core.Entities
@using CruderSimple.Core.ViewModels

@typeparam TEntity where TEntity : IEntity
@typeparam TEntityResult where TEntityResult : BaseDto

<Div Width="@Width" Padding="@Padding">
    <Autocomplete @ref="@autoComplete"
                  TItem="TEntityResult"
                  TValue="string"
                  Data="@SearchedData"
                  TotalItems="@TotalData"
                  TextField="@((item) => item.GetValue)"
                  ValueField="@((item) => item.GetKey)"
                  Placeholder="Search..."
                  HighlightSearch
                  Debounce="true"
                  DebounceInterval="300"
                  MinLength="0"
                  CloseOnSelection
                  Virtualize
                  ReadData="@GetData"
                  SelectionMode="AutocompleteSelectionMode.Default"
                  SelectedValue="@(SelectedValue?.GetKey)"
                  SelectedValueChanged="@ValueChanged"
                  AsyncValidator="@sIsValidValue"
                  SearchFocus="@SearchFocus"
                  SearchKeyDown="SearchChanged"
                  SearchBlur="@((_) => autoComplete.Close())"
                  Disabled="@Disabled">
        <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
        <ItemContent>
            @if (ItemContent is null)
            {
                @context.Text
            } else
            {
                @ItemContent(context)
            }
        </ItemContent>
    </Autocomplete>
    <ValidationError>Invalid</ValidationError>

</Div>