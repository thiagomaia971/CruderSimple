@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.Extensions.Configuration
@using static CruderSimple.Blazor.Components.BreadcrumbList
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationState
@inject IdentityAuthenticationStateProvider authentication
@inject IConfiguration configuration
@inherits CruderSimplePageBase

<Bar Breakpoint="Breakpoint.Desktop" Background="Background.Dark" ThemeContrast="ThemeContrast.Dark">
    <BarBrand>
    </BarBrand>
    <BarToggler />
    <BarMenu>
        <BarStart>
            <BarItem>
                <Heading 
                    Size="HeadingSize.Is4" 
                    Class="page-title" 
                    Margin="Margin.Is3.FromEnd.Is0.FromBottom"
                         Style="color: var(--b-bar-item-dark-hover-color, #fff); line-height: 38px; height: 38x">
                    @PageTitle
                </Heading>
            </BarItem>
            <BarItem>
                <AppSearch />
            </BarItem>
        </BarStart>
        <BarEnd>
            <BarItem>
                <BarDropdown RightAligned>
                    <BarItem Display="Display.InlineBlock">
                        <CruderSimple.Blazor.Components.PageTitle Title="Usuários"
                                                                  BreadcrumbItems="@(new Breadcrum[] {
                                            new Breadcrum("/", "Test")})" />
                    </BarItem>

                    <BarDropdownToggle Display="Display.InlineBlock.OnTablet.None.OnMobile">
                        <Image Class="avatar" Source="_content/CruderSimple.Blazor/img/avatars/avatar-6.jpg" Text="Avatar" Fluid Border="Border.RoundedCircle" Margin="Margin.Is1.FromEnd" Style="width:40px; height:40px;" />
                         <Span TextColor="TextColor.Light">@UserName</Span>
                        @*<Span TextColor="TextColor.Muted">Founder</Span>*@
                    </BarDropdownToggle>
                    <BarDropdownMenu>
                        <BarDropdownItem>
                            <Icon Name="IconName.Wrench" />
                            User Settings
                        </BarDropdownItem>
                        <BarDropdownDivider />
                        <BarDropdownItem>
                            <div @onclick="@LogoutClick">
                                <Icon Name="IconName.Lock" TextColor="TextColor.Danger" />
                                Logout
                            </div>
                        </BarDropdownItem>
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
        </BarEnd>
    </BarMenu>
</Bar>
@code{
    RenderFragment customIcon =@<img src="/brand-logo.png" style="width:32px; height: 32px" />;
    public string UserName { get; set; }

    protected async override Task OnInitializedAsync()
    {
        var user = await authenticationState.GetAuthenticationStateAsync();
        UserName = user?.User?.Identity?.Name ?? string.Empty;
    }

    async Task LogoutClick()
    {
        await authentication.Logout();
        navigationManager.NavigateTo("/login");
    }
}