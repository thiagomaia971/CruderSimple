@using Blazorise.DataGrid
@using CruderSimple.Core.Extensions;
@using CruderSimple.Blazor.Extensions;
@using CruderSimple.Blazor.Components.Crud
@typeparam TEntity
@typeparam TDto

@if (!IsDate)
{
    <Column ColumnSize="ColumnSize.Is12">
        <Field>
            <Select 
                    TValue="DataGridColumnFilterMethod"
                    SelectedValue="@(FilterMethod)"
                    SelectedValueChanged="@((e) => FilterMethod = e)">
                @if (IsNumeric)
                {
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.Equals">Igual</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.NotEquals">Diferente</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.GreaterThan">Maior que</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.GreaterThanOrEqual">Maior ou igual</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.LessThan">Menor que</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.LessThanOrEqual">Menor ou igual</SelectItem>
                }
                else if (IsSelect)
                {
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.Equals">Igual</SelectItem>
                    @* <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.Contains">Contém</SelectItem> *@
                }
                else
                {
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.Contains">Contém</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.StartsWith">Começa com</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.EndsWith">Termina com</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.Equals">Igual</SelectItem>
                    <SelectItem TValue="DataGridColumnFilterMethod" Value="@DataGridColumnFilterMethod.NotEquals">Diferente</SelectItem>
                }
            </Select>
        </Field>
    </Column>
}

@if (IsSelect)
{
    <Column ColumnSize="ColumnSize.Is12">
        <Field>
            <Select TValue="string" SelectedValue="@(SearchValue)" SelectedValueChanged="@((newValue) => SearchValue = newValue)">
                @foreach (var item in DataGridSelectColumn?.Data ?? new List<object>())
                {
                    <SelectItem TValue="string" Value="@((string)DataGridSelectColumn.ValueField(item))">@DataGridSelectColumn.TextField(item)</SelectItem>
                }
            </Select>
        </Field>
    </Column>
}
else @if (IsDate)
{
    <Column ColumnSize="ColumnSize.Is6">
        <Field>
            <DatePicker TValue="DateTime?"
                        Placeholder="Início"
                        DisplayFormat="dd/MM/yyyy"
                        Date="@(GetDate(true))"
                        DateChanged="@((newValue) => DateChanged(true, newValue))"/>
        </Field>
    </Column>
    <Column ColumnSize="ColumnSize.Is6">
        <Field>
            <DatePicker TValue="DateTime?"
                        Placeholder="Fim"
                        DisplayFormat="dd/MM/yyyy"
                        Date="@(GetDate(false))"
                        DateChanged="@((newValue) => DateChanged(false, newValue))"/>
        </Field>
    </Column>
}
else
{
    <Column ColumnSize="ColumnSize.Is12">
        <Field>
            <TextEdit Text="@(SearchValue)" TextChanged="@((newValue) => SearchValue = newValue)" />
        </Field>
    </Column>
}

<Column ColumnSize="ColumnSize.Is12" Flex="Flex.JustifyContent.End.AlignItems.Center" Gap="Gap.Is2">
    <Button Clicked="@Filter" Color="Color.Primary">Filter</Button>
    <Button Clicked="@Clear" Color="Color.Light">Clear</Button>
</Column>

@code {

    [CascadingParameter] public DataGrid<TDto> ParentDataGrid { get; set; }

    [Parameter] public DataGridColumn<TDto> Column { get; set; }

    public string SearchValue
    {
        get =>
            ((ListPageFilter)Column.Filter.SearchValue)?.SearchValue;
        set
        {
            if (Column.Filter.SearchValue is null)
                InitializeSearchValue();
            ((ListPageFilter)Column.Filter.SearchValue).SearchValue = value;
        }
    }

    public DataGridColumnFilterMethod FilterMethod
    {
        get =>
            ((ListPageFilter)Column.Filter.SearchValue)?.FilterMethod ?? DataGridColumnFilterMethod.Contains;
        set
        {
            if (Column.Filter.SearchValue is null)
                InitializeSearchValue();
            ((ListPageFilter)Column.Filter.SearchValue).FilterMethod = value;
        }
    }

    public bool IsNumeric => Column.ColumnType == DataGridColumnType.Numeric;
    public bool IsDate => Column.ColumnType == DataGridColumnType.Date;
    public bool IsSelect => Column.ColumnType == DataGridColumnType.Select;
    public DataGridSelectColumn<TDto> DataGridSelectColumn => (DataGridSelectColumn<TDto>)Column;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    private void InitializeSearchValue()
    {
        Column.Filter.SearchValue = new ListPageFilter
        {
            FilterMethod = DataGridColumnFilterMethod.Contains
        };
    }

    private void DateChanged(bool start, DateTime? date)
    {
        var searchValueSplited = SearchValue is null ? new string[2] : SearchValue?.ToString().Split("_");
        if (start)
            searchValueSplited[0] = date.Value.ToStartDate().ToString("O");
        else 
            searchValueSplited[1] = date.Value.ToEndDate().ToString("O");

        SearchValue = string.Join("_", searchValueSplited);
    }

    private DateTime? GetDate(bool start)
    {
        if (SearchValue is null)
            return null;
        var values = SearchValue.Split("_");
        if (string.IsNullOrEmpty(values[start ? 0 : 1]))
            return null;
        return DateTime.Parse(values[start ? 0 : 1]);
    }

    private async Task Filter()
    {
        await ParentDataGrid.Refresh();
        await ParentDataGrid.Reload();
    }

    private async Task Clear()
    {
        Column.Filter.SearchValue = null;
        await ParentDataGrid.Refresh();
        await ParentDataGrid.Reload();
    }
}
