@typeparam TColumnEntity
@typeparam TColumnDto
@typeparam TSelectEntity
@typeparam TSelectEntityDto
@inherits CruderColumnBase<TColumnEntity, TColumnDto>
@using CruderSimple.Core.ViewModels

@_Id
<DataGridSelectColumn @ref="DataGridSelectColumn" 
                      TItem="TColumnDto"
                      Field="@ColumnField"
                      Caption="@ColumnCaption"
                      Editable="@Editable"
                      Filterable="@Filterable"
                      Sortable="@Sortable"
                      Attributes="@Attributes"
                      ValueField="(x) => ((TColumnDto)x).GetKey"
                      TextField="(x) => ((TColumnDto)x).GetValue"
                      SortField="@GridSort"
                      HeaderCellStyle="line-height: 38px"
                      HeaderTextAlignment="TextAlignment.Start"
                      VerticalAlignment="VerticalAlignment.Middle"
                      FilterTextAlignment="TextAlignment.Center"
                      FilterVerticalAlignment="VerticalAlignment.Middle">
    <DisplayTemplate>
        
        <Div @onclick="@((_) => OnClick(context))">
            @if (AlwaysEditable && PermissionService.CanWrite)
            {
                <EntityAutocomplete TEntity="TSelectEntity"
                                    TEntityResult="TSelectEntityDto"
                                    SearchKey="@SelectSearchKey"
                                    SelectedValue="@((TSelectEntityDto) context.GetValueByPropertyName(ColumnField))"
                                    SelectedObjectValueChanged="SelectChanged"
                                    Required="false" />
                @* @(CreateSelectComponent(context.GetValueByPropertyName(ColumnField))) *@
            }
            else
            {
                @if (DisplayTemplate != null)
                {
                    DisplayTemplate(context);
                }
                else
                {
                    <Span>@GetGridName(context)</Span>
                }
            }
        </Div>
    </DisplayTemplate>
    <EditTemplate>
        @* @(CreateSelectComponent(context.CellValue)) *@
    </EditTemplate>
</DataGridSelectColumn>